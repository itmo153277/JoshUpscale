; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "JoshUpscale"
#define MyAppVersion "@PROJECT_VERSION@"
#define MyAppPublisher "viktprog@gmail.com"

[Setup]
AppId={{F7050985-63F1-4107-B5BD-2654212A23D9}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName}
AppPublisher={#MyAppPublisher}
VersionInfoVersion={#MyAppVersion}
VersionInfoCopyright={#MyAppPublisher}
DefaultDirName={code:GetDefaultInstallDir}
ArchitecturesAllowed=x64compatible
ArchitecturesInstallIn64BitMode=x64compatible
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile=@LICENSE_PATH@
PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputBaseFilename=obs-joshupscale-installer
Compression=lzma2/max
SolidCompression=yes
WizardStyle=classic
DisableWelcomePage=no
WizardImageFile=compiler:WizClassicImage.bmp
WizardSmallImageFile=compiler:WizClassicSmallImage.bmp
SetupIconFile=compiler:SetupClassicIcon.ico
DirExistsWarning=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "@PLUGIN_PATH@"; DestDir: "{code:GetBinaryPath}"; Flags: ignoreversion
Source: "@CORE_PATH@"; DestDir: "{code:GetDataPath}"; Flags: ignoreversion
Source: "@DATA_PATH@\*"; DestDir: "{code:GetDataPath}"; Flags: ignoreversion recursesubdirs createallsubdirs
#if ! @USE_NVVFX@
Source: "@DEPS_PATH@\*"; DestDir: "{code:GetDataPath}"; Flags: ignoreversion
#endif

[Icons]
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Code]
const
  MinObsVersion = @MIN_OBS_VERSION@;
  NvVfxTargetVersion = {#PackVersionComponents(0, 7, 6, 0)};

function GetNvVfxPath: String;
begin
  Result := GetEnv('NV_VIDEO_EFFECTS_PATH');
  if Result = '' then
    Result := ExpandConstant('{commonpf64}\NVIDIA Corporation\NVIDIA Video Effects');
end;

function CheckNvVfx: String;
var
  NvVfxPath: String;
  NvVfxVersion: Int64;
begin
  Result := 'NVIDIA Video Effects is not installed';
  NvVfxPath := GetNvVfxPath;
  if not DirExists(NvVfxPath) then
    Exit;
  if not GetPackedVersion(NvVfxPath + '\NVVideoEffects.dll', NvVfxVersion) then
    Exit;
  Result := 'NVIDIA Video Effects is too old. Please update it first';
  if ComparePackedVersion(NvVfxVersion, NvVfxTargetVersion) < 0 then
    Exit;
  Result := 'NVIDIA Video Effects version mismatch';
  if not FileExists(NvVfxPath + '\nvinfer_10.dll') then
    Exit;
  if not SamePackedVersion(NvVfxVersion, NvVfxTargetVersion) then
    Exit;
  Result := '';
end;

function GetOBSPath: String;
var InstallPath: String;
begin
  if RegQueryStringValue(HKLM, 'SOFTWARE\OBS Studio', '', InstallPath) then
    Result := InstallPath
  else
    Result := ExpandConstant('{commonpf64}\obs-studio')
end;

function GetDefaultInstallDir(Value: String): String;
begin
  if IsAdminInstallMode then
    Result := GetOBSPath
  else
    Result := ExpandConstant('{usercf}\obs-studio\plugins\obs-joshupscale')
end;

function GetBinaryPath(Value: String): String;
begin
  if IsAdminInstallMode then
    Result := ExpandConstant('{app}\obs-plugins\64bit')
  else
    Result := ExpandConstant('{app}\bin')
end;

function GetDataPath(Value: String): String;
begin
  if IsAdminInstallMode then
    Result := ExpandConstant('{app}\data\obs-plugins\obs-joshupscale')
  else
    Result := ExpandConstant('{app}\data\obs-joshupscale')
end;

function GetTargetOBSPath: String;
begin
  if IsAdminInstallMode then
    Result := ExpandConstant('{app}')
  else
    Result := GetOBSPath;
end;

function CheckOBSVersion: String;
var
  OBSPath: String;
  MajorVer, MinorVer, RevVer, BuildVer: Word;
begin
  OBSPath := GetTargetOBSPath;
  if not DirExists(OBSPath) then
    Exit;
  Result := 'OBS version mismatch';
  if not GetVersionComponents(OBSPath + '\bin\64bit\obs.dll', MajorVer, MinorVer, RevVer, BuildVer) then
    Exit;
  if MajorVer < MinObsVersion then
    Exit;
  Result := '';
end;

function PrepareToInstall(var NeedsRestart: Boolean): String;
begin
#if @USE_NVVFX@
  Result := CheckNvVfx;
  if Result <> '' then
    Exit;
#endif
  Result := CheckOBSVersion;
  if Result <> '' then
    Exit;
end;
