{
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "description": "Config for JoshUpscale model creation",
    "properties": {
        "generator": {
            "type": "object",
            "description": "Parameters for model.get_generator_model",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name for the model"
                },
                "num_blocks": {
                    "type": "integer",
                    "description": "Number of residual blocks"
                },
                "num_filters": {
                    "type": "integer",
                    "description": "Number of filters inside block"
                },
                "input_dtypes": {
                    "type": "array",
                    "description": "Data types for inputs",
                    "items": {
                        "type": "string",
                        "description": "Data type for input"
                    }
                },
                "output_dtypes": {
                    "type": "string",
                    "description": "Data type for output node"
                }
            }
        },
        "flow_model_type": {
            "type": "string",
            "description": "Flow model type",
            "enum": [
                "resnet",
                "autoencoder"
            ]
        },
        "flow": {
            "description": "Parameters for flow model depending on type",
            "anyOf": [
                {
                    "type": "object",
                    "description": "Parameters for model.get_flow_model_resnet",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name for the model"
                        },
                        "num_blocks": {
                            "type": "integer",
                            "description": "Number of residual blocks"
                        },
                        "num_filters": {
                            "type": "integer",
                            "description": "Number of filters inside block"
                        },
                        "input_dtypes": {
                            "description": "Data types for inputs",
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "description": "Data type for input"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "object",
                    "description": "Parameters for model.get_flow_model_autoencoder",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name for the model"
                        },
                        "filters": {
                            "type": "array",
                            "description": "Filters for autoencoder",
                            "items": {
                                "type": "integer",
                                "description": "Number of filters for the layer"
                            }
                        },
                        "input_dtypes": {
                            "description": "Data types for inputs",
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "description": "Data type for input"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        "full_model": {
            "type": "object",
            "description": "Parameters for model.get_full_model",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name for the model"
                },
                "dtype": {
                    "type": "string",
                    "description": "Data type for input nodes"
                }
            }
        },
        "frvsr": {
            "type": "object",
            "description": "Parameters for model.get_frvsr",
            "properties": {
                "crop_size": {
                    "type": "integer",
                    "description": "Cropping size"
                },
                "learning_rate": {
                    "type": "number",
                    "description": "Learning rate for FRVSR training"
                }
            }
        },
        "discriminator": {
            "type": "object",
            "description": "Parameters for model.get_discriminator_model",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name for the model"
                },
                "crop_size": {
                    "type": "integer",
                    "description": "Cropping size"
                }
            }
        },
        "gan": {
            "type": "object",
            "description": "Parameters for model.get_gan_model",
            "properties": {
                "crop_size": {
                    "type": "integer",
                    "description": "Cropping size"
                }
            }
        },
        "gan_train": {
            "type": "object",
            "description": "Parameters for GAN training",
            "properties": {
                "generator_learning_rate": {
                    "type": "number",
                    "description": "Learning rate for generator training"
                },
                "flow_learning_rate": {
                    "type": "number",
                    "description": "Learning rate for flow net training"
                },
                "discriminator_learning_rate": {
                    "type": "number",
                    "description": "Learning rate for discriminator training"
                },
                "steps_per_execution": {
                    "type": "integer",
                    "description": "Number of steps per iteration"
                },
                "compile_test_fn": {
                    "type": "boolean",
                    "description": "Compile test_fn with JIT XLA"
                },
                "compile_play_fn": {
                    "type": "boolean",
                    "description": "Compile play_fn with JIT XLA"
                }
            }
        },
        "batch_size": {
            "type": "integer",
            "description": "Batch size"
        }
    }
}